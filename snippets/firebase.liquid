
<script>
  Raven.config('https://6866624f56b745c287ac3b5563f09581@app.getsentry.com/87889').install()


  function getParameterByName(name) {
      var url = window.location.href;
      name = name.replace(/[\[\]]/g, "\\$&");
      var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
          results = regex.exec(url);
      if (!results) return null;
      if (!results[2]) return '';
      return decodeURIComponent(results[2].replace(/\+/g, " "));
  }

  function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for(var i = 0; i <ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0)==' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) == 0) {
        return c.substring(name.length,c.length);
      }
    }
    return "";
  }

  var dorrbell = {
    endpoints : {
      firebase : 'https://dorrbell-test.firebaseapp.com',
      heroku : 'https://dorrbell-test.herokuapp.com'
    },
    logout : function(){
      localStorage.removeItem("dorrbell-token");
      firebase.auth().signOut();
      window.location.replace(dorrbell.endpoints.firebase + "?action=signOut");
    },
    reject : function(message){
      Raven.captureMessage('Kicked from shopify: ' + message, {level : 'warning'});
      window.location.replace(dorrbell.endpoints.firebase + "/register");
    },

    success : function(user){
      this.setCartForUser(user);
    },

    callout : function(type, route, data, success, error){
      $.ajax({
        type: type,
        url: dorrbell.endpoints.heroku + route,
        contentType: 'application/json',
        data: JSON.stringify(data),
        beforeSend: function (request){
          request.setRequestHeader("authorization", "Basic Z14vbjcyayxOdUpnM0pfXw==");
        },
        success : success,
        error : error
      });
    },


    validateUser : function(user){
      dorrbell.callout(
        "POST"
        ,"/api/validate-user"
        , {
          cart : getCookie('cart'),
          uid : user.uid
        }
        ,function(res){
          if(res && res.status == 200)
            $("body").show();
          else
         	dorrbell.reject('validation failed 1');
        },function(res){
          if(res.status !== 201){
          	dorrbell.reject('validation failed 2');
          }else
            $("body").show();
        });
    },

    setCartForUser : function(user){

      if(user)
      	this.user = user;
      else
       	this.user = dorrbell.user;

      var userId = firebase.auth().currentUser.uid;
      firebase.database().ref('/customers/' + userId).once("value").then(function(snapshot){
        var customer = snapshot.val();
        if(customer && customer.contact.Qualified__c === true){
          $("body").show();
          var carts = (customer.contact && customer.contact.Carts__r) ? customer.contact.Carts__r.records : null;
          var cartRef = firebase.database().ref('customers/' + customer.firebaseId + '/contact/Carts__r/records');
          var cartId = getCookie('cart');

          if(cartId){
            if(!carts)
              cartRef.set({
                "0" : {"Shopify_Id__c" : getCookie('cart'), "Contact__c" : customer.contact.Id}
              });
            else if(carts){
              cartRef.orderByChild('Shopify_Id__c').equalTo(getCookie('cart')).once('value', function(snapshot){
                if(!snapshot.val()){
                  var index = carts.length;
                  var newCart = {};
                  newCart[index] = {"Shopify_Id__c" : getCookie('cart'), "Contact__c" : customer.contact.Id};
                  cartRef.update(newCart);
                }
              });
            }
          }
        }
       	else if(customer && customer.contact.Qualified__c !== true)
          dorrbell.reject('not qualified');
        else
          dorrbell.validateUser(user);
      });
    },

    tokenLogin : function(){
      var token = localStorage.getItem("dorrbell-token");
      if(token){
        var credential = dorrbell.getCredential(token);
        if(credential && credential.provider == "password")
          firebase.auth().signInWithEmailAndPassword(credential.email, credential.password).then(dorrbell.setCartForUser, dorrbell.error);
       	else if(credential)
        	firebase.auth().signInWithCredential(credential).then(dorrbell.setCartForUser, dorrbell.error);
        else
          dorrbell.error();
      }else
        dorrbell.error();
    },

    urlLogin : function(e){
      var token = getParameterByName('token');
      if(token){
        localStorage.setItem("dorrbell-token", token);
        var credential = dorrbell.getCredential(token);
        if(credential && credential.provider == "password")
          firebase.auth().signInWithEmailAndPassword(credential.email, credential.password).then(dorrbell.setCartForUser, e);
        else if(credential){
          firebase.auth().signInWithCredential(credential).then(dorrbell.setCartForUser, e);
        }else{
         	e();
        }
      }else
        e();
    },

    error : function(){
      	if(this.user)
        	this.setCartForUser();
     	else
          dorrbell.reject('error');
    },

    getCredential : function(token){
      try{
        var oc = JSON.parse(atob(token));
        var credential;
        if(oc.provider == "google.com"){
          credential = firebase.auth.GoogleAuthProvider.credential(oc.idToken);
        }else if(oc.provider == "facebook.com"){
          credential = firebase.auth.FacebookAuthProvider.credential(oc.accessToken);
        }else if(oc.provider == "twitter.com"){
          credential = firebase.auth.TwitterAuthProvider.credential(oc.accessToken, oc.secret);
        }else if(oc.provider = "password")
          credential = oc;
        return credential;
      }catch(e){
        Raven.captureException(e);
        return null;
      }

    }
  };

  // Initialize Firebase
  var config = {
    apiKey: "AIzaSyCbzQTM1kMvD5EsdXSU-moUJFaXgHX0Kr8",
    authDomain: "dorrbell-test.firebaseapp.com",
    databaseURL: "https://dorrbell-test.firebaseio.com",
    storageBucket: "dorrbell-test.appspot.com",
  };
  firebase.initializeApp(config);


  dorrbell.urlLogin(dorrbell.tokenLogin);

  firebase.auth().onAuthStateChanged(function(user) {
    if (user) {
      Raven.setUserContext(user);
      dorrbell.user = user;
    }
  });

  $(document).ready(function(){
    $(".btn#add").click(function(){
      setTimeout(dorrbell.setCartForUser, 1000);
    });
  });

</script>
